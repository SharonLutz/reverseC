// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// mediation_helper
void mediation_helper(Environment& env);
RcppExport SEXP _reverseC_mediation_helper(SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment& >::type env(envSEXP);
    mediation_helper(env);
    return R_NilValue;
END_RCPP
}
// do_the_thing
NumericMatrix do_the_thing();
RcppExport SEXP _reverseC_do_the_thing() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(do_the_thing());
    return rcpp_result_gen;
END_RCPP
}
// derp
NumericVector derp(NumericVector x);
RcppExport SEXP _reverseC_derp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(derp(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_reverseC_mediation_helper", (DL_FUNC) &_reverseC_mediation_helper, 1},
    {"_reverseC_do_the_thing", (DL_FUNC) &_reverseC_do_the_thing, 0},
    {"_reverseC_derp", (DL_FUNC) &_reverseC_derp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_reverseC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
