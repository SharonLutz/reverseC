Rcpp::compileAttributes();devtools::document();devtools::unload();devtools::load_all();

devtools::load_all()

#param = reverseC::MediateDataGenerationParameters(n=6000, nSim=1)

set.seed(1)
param = reverseC::MediateDataGenerationParameters(n=100, nSim=1)
data_item = reverseC::generateDataMatrix(param)[[1]]
models = reverseC::assembleLinearModels(data_item)

set.seed(1)
vanilla_med_env = reverseC::test.mediate.vanilla(models@med.fit, models@out.fit, treat="X", mediator="M1", sims=100, return_context=T, export_loop_vars=T)
vanilla_loop_env = reverseC::collect_vanillaR_loop_exports()

set.seed(1)
rcpp_med_env_n1 = reverseC::test.mediate.rcpp(models@med.fit, models@out.fit, treat="X", mediator="M1", sims=100, return_context=T, export_loop_vars=T)
rcpp_loop_env = reverseC::collect_rcpp_loop_exports()
mediation.test.compare()

set.seed(1)
rcpp_med_env_n2 = reverseC::test.mediate.rcpp(models@med.fit, models@out.fit, treat="X", mediator="M1", sims=100, return_context=T, num_cores=2)

set.seed(1)
rcpp_med_env_n4 = reverseC::test.mediate.rcpp(models@med.fit, models@out.fit, treat="X", mediator="M1", sims=100, return_context=T, num_cores=4)

set.seed(1)
rcpp_med_env_n7 = reverseC::test.mediate.rcpp(models@med.fit, models@out.fit, treat="X", mediator="M1", sims=100, return_context=T, num_cores=7)

med_env = reverseC::stripped_down_mediate_with_rcpp(models@med.fit, models@out.fit, treat="X", mediator="M1", sims=10000, return_context=T)

med_env = reverseC::stripped_down_mediate_with_rcpp(models@med.fit, models@out.fit, treat="X", mediator="M1", sims=1000, return_context=T)

reverseC::export_environment(med_env)



reverseC::mediate_helper(environment())


reverseC::threaded_mediate_helper(environment(), 4)


stripped_down_mediate_with_rcpp(models@med.fit, models@out.fit, treat="X", mediator="M1", sims=10000)

tic("test");reverseC::threaded_mediate_helper(environment(), 7);toc()

tic("test");med_result=mediate(models@med.fit, models@out.fit, treat="X", mediator="M1", sims=10000);toc()


df = data.frame("N" = c(1.1,1.2,1.3))
df["A"] = c(1,2,3)
df["B"] = c(4,5,6)
dft = as.data.frame(t(df))

emat = mmat = matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, ncol=3)
edf = as.data.frame(emat)
edfmat = as.matrix(edf)

mmat = matrix(c(1,2,3,4,5,6,7,8,9,10,11,12), nrow=4, ncol=3)
tmat = t(mmat)


reverseC::cpp_mult(mmat,tmat)
